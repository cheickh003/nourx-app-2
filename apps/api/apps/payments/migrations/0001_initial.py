# Generated by Django 4.2.23 on 2025-08-15 19:14

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("billing", "0001_initial"),
        ("clients", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "cinetpay_transaction_id",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="ID Transaction CinetPay",
                    ),
                ),
                (
                    "cinetpay_payment_token",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Token de paiement CinetPay",
                    ),
                ),
                (
                    "cinetpay_checkout_url",
                    models.URLField(
                        blank=True, null=True, verbose_name="URL de checkout CinetPay"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Montant"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("card", "Carte bancaire"),
                            ("mobile_money", "Mobile Money"),
                            ("bank_transfer", "Virement bancaire"),
                            ("wallet", "Portefeuille électronique"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Méthode de paiement",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("processing", "En traitement"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                            ("refunded", "Remboursé"),
                            ("disputed", "Contesté"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "initiated_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Initié le"),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Traité le"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Terminé le"
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Expire le"
                    ),
                ),
                (
                    "payer_name",
                    models.CharField(
                        blank=True,
                        max_length=200,
                        null=True,
                        verbose_name="Nom du payeur",
                    ),
                ),
                (
                    "payer_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name="Email du payeur",
                    ),
                ),
                (
                    "payer_phone",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Téléphone du payeur",
                    ),
                ),
                (
                    "raw_response_data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Données brutes de réponse"
                    ),
                ),
                (
                    "webhook_payload",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Payload webhook"
                    ),
                ),
                (
                    "external_reference",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="Référence externe",
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "fees_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="Frais",
                    ),
                ),
                (
                    "net_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        verbose_name="Montant net",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="clients.client",
                        verbose_name="Client",
                    ),
                ),
                (
                    "initiated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="initiated_payments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Initié par",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="billing.invoice",
                        verbose_name="Facture",
                    ),
                ),
            ],
            options={
                "verbose_name": "Paiement",
                "verbose_name_plural": "Paiements",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentWebhook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_id",
                    models.CharField(max_length=100, verbose_name="ID de transaction"),
                ),
                (
                    "webhook_id",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        verbose_name="ID du webhook",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("received", "Reçu"),
                            ("processed", "Traité"),
                            ("ignored", "Ignoré"),
                            ("failed", "Échoué"),
                        ],
                        default="received",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "processed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Traité le"
                    ),
                ),
                (
                    "event_type",
                    models.CharField(max_length=50, verbose_name="Type d'événement"),
                ),
                ("payload", models.JSONField(verbose_name="Payload")),
                (
                    "signature",
                    models.CharField(max_length=255, verbose_name="Signature HMAC"),
                ),
                (
                    "is_signature_valid",
                    models.BooleanField(default=False, verbose_name="Signature valide"),
                ),
                (
                    "headers",
                    models.JSONField(
                        blank=True, null=True, verbose_name="En-têtes HTTP"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Message d'erreur"
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhooks",
                        to="payments.payment",
                        verbose_name="Paiement",
                    ),
                ),
            ],
            options={
                "verbose_name": "Webhook de paiement",
                "verbose_name_plural": "Webhooks de paiement",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["transaction_id", "created_at"],
                        name="payments_pa_transac_8110cc_idx",
                    ),
                    models.Index(
                        fields=["status"], name="payments_pa_status_02c3bc_idx"
                    ),
                    models.Index(
                        fields=["event_type"], name="payments_pa_event_t_c5f758_idx"
                    ),
                    models.Index(
                        fields=["is_signature_valid"],
                        name="payments_pa_is_sign_fea7db_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PaymentAttempt",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "transaction_id",
                    models.CharField(max_length=100, verbose_name="ID de transaction"),
                ),
                (
                    "attempt_number",
                    models.PositiveIntegerField(
                        default=1, verbose_name="Numéro de tentative"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("initiated", "Initié"),
                            ("redirected", "Redirigé"),
                            ("processing", "En traitement"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("abandoned", "Abandonné"),
                            ("expired", "Expiré"),
                        ],
                        default="initiated",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "channel",
                    models.CharField(
                        choices=[
                            ("web", "Web"),
                            ("mobile", "Mobile"),
                            ("api", "API"),
                            ("webhook", "Webhook"),
                        ],
                        default="web",
                        max_length=10,
                        verbose_name="Canal",
                    ),
                ),
                (
                    "attempted_amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=12, verbose_name="Montant tenté"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Démarré le"),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Terminé le"
                    ),
                ),
                (
                    "error_code",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Code d'erreur",
                    ),
                ),
                (
                    "error_message",
                    models.TextField(
                        blank=True, null=True, verbose_name="Message d'erreur"
                    ),
                ),
                (
                    "request_data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Données de requête"
                    ),
                ),
                (
                    "response_data",
                    models.JSONField(
                        blank=True, null=True, verbose_name="Données de réponse"
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="Adresse IP"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(blank=True, null=True, verbose_name="User Agent"),
                ),
                (
                    "duration_seconds",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Durée (secondes)"
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payment_attempts",
                        to="billing.invoice",
                        verbose_name="Facture",
                    ),
                ),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attempts",
                        to="payments.payment",
                        verbose_name="Paiement",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tentative de paiement",
                "verbose_name_plural": "Tentatives de paiement",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["payment", "created_at"],
                        name="payments_pa_payment_3e3c59_idx",
                    ),
                    models.Index(
                        fields=["invoice", "status"],
                        name="payments_pa_invoice_d0a37a_idx",
                    ),
                    models.Index(
                        fields=["transaction_id"], name="payments_pa_transac_356235_idx"
                    ),
                    models.Index(
                        fields=["status", "created_at"],
                        name="payments_pa_status_f4857f_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["invoice", "status"], name="payments_pa_invoice_e2429a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["client", "status"], name="payments_pa_client__39a683_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["status", "created_at"], name="payments_pa_status_343680_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["cinetpay_transaction_id"],
                name="payments_pa_cinetpa_3d971e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="payment",
            index=models.Index(
                fields=["external_reference"], name="payments_pa_externa_e30da4_idx"
            ),
        ),
    ]
