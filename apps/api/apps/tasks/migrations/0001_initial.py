# Generated by Django 4.2.23 on 2025-08-15 19:14

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("projects", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="Titre de la tâche"),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("todo", "À faire"),
                            ("in_progress", "En cours"),
                            ("review", "En révision"),
                            ("done", "Terminé"),
                            ("blocked", "Bloqué"),
                            ("cancelled", "Annulé"),
                        ],
                        default="todo",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Basse"),
                            ("normal", "Normale"),
                            ("high", "Haute"),
                            ("urgent", "Urgente"),
                        ],
                        default="normal",
                        max_length=10,
                        verbose_name="Priorité",
                    ),
                ),
                (
                    "task_type",
                    models.CharField(
                        choices=[
                            ("feature", "Fonctionnalité"),
                            ("bug", "Bug"),
                            ("task", "Tâche"),
                            ("improvement", "Amélioration"),
                            ("documentation", "Documentation"),
                            ("testing", "Test"),
                        ],
                        default="task",
                        max_length=15,
                        verbose_name="Type",
                    ),
                ),
                (
                    "due_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date d'échéance"
                    ),
                ),
                (
                    "started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Démarré le"
                    ),
                ),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Terminé le"
                    ),
                ),
                (
                    "estimated_hours",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Heures estimées",
                    ),
                ),
                (
                    "actual_hours",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=6,
                        verbose_name="Heures réelles",
                    ),
                ),
                (
                    "progress",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Progression (%)",
                    ),
                ),
                ("order", models.PositiveIntegerField(default=0, verbose_name="Ordre")),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Tags séparés par des virgules",
                        max_length=200,
                        null=True,
                        verbose_name="Tags",
                    ),
                ),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Assigné à",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tasks",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Créé par",
                    ),
                ),
                (
                    "milestone",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tasks",
                        to="projects.milestone",
                        verbose_name="Jalon",
                    ),
                ),
                (
                    "parent_task",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subtasks",
                        to="tasks.task",
                        verbose_name="Tâche parente",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tasks",
                        to="projects.project",
                        verbose_name="Projet",
                    ),
                ),
            ],
            options={
                "verbose_name": "Tâche",
                "verbose_name_plural": "Tâches",
                "ordering": ["order", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TaskComment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("body", models.TextField(verbose_name="Commentaire")),
                (
                    "is_internal",
                    models.BooleanField(
                        default=False,
                        help_text="Visible seulement par l'équipe NOURX",
                        verbose_name="Commentaire interne",
                    ),
                ),
                (
                    "attachment",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="task_comments/",
                        verbose_name="Pièce jointe",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_comments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Auteur",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to="tasks.task",
                        verbose_name="Tâche",
                    ),
                ),
            ],
            options={
                "verbose_name": "Commentaire de tâche",
                "verbose_name_plural": "Commentaires de tâches",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(
                        fields=["task", "created_at"],
                        name="tasks_taskc_task_id_3f97e8_idx",
                    ),
                    models.Index(
                        fields=["author"], name="tasks_taskc_author__b4773a_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TaskAttachment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "file",
                    models.FileField(
                        upload_to="task_attachments/", verbose_name="Fichier"
                    ),
                ),
                (
                    "file_name",
                    models.CharField(max_length=255, verbose_name="Nom du fichier"),
                ),
                ("file_size", models.BigIntegerField(verbose_name="Taille du fichier")),
                (
                    "mime_type",
                    models.CharField(max_length=100, verbose_name="Type MIME"),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="tasks.task",
                        verbose_name="Tâche",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="task_attachments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Téléchargé par",
                    ),
                ),
            ],
            options={
                "verbose_name": "Pièce jointe de tâche",
                "verbose_name_plural": "Pièces jointes de tâches",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["task"], name="tasks_taska_task_id_86e40f_idx")
                ],
            },
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["project", "status"], name="tasks_task_project_b78682_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["assigned_to", "status"], name="tasks_task_assigne_b3b2bc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["priority"], name="tasks_task_priorit_a900d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["due_date"], name="tasks_task_due_dat_bce847_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="task",
            index=models.Index(
                fields=["status", "order"], name="tasks_task_status_524250_idx"
            ),
        ),
    ]
